#include "../../tonemap.hlsl"

Texture2D<float4> t0 : register(t0);
SamplerState s0_s : register(s0);
cbuffer cb0 : register(b0){
  float4 cb0[6];
}

void main(
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = cb0[2].xyz * float3(0.5,0.5,0.5) + float3(-0.5,-0.5,-0.5);
  r1.xyzw = t0.Sample(s0_s, v1.xy).xyzw;
  r2.xyz = float3(1,1,1) + -r1.xyz;
  r0.xyz = r0.xyz * r2.xyz + r1.xyz;
  if(injectedData.toneMapType == 0.f){
    r0.xyz = saturate(r0.xyz);
  }
  r0.xyz = cb0[4].xyz * r0.xyz;
  r2.xyz = float3(1,1,1) / cb0[3].xyz;
  r0.xyz = log2(r0.xyz);
  r0.xyz = r2.xyz * r0.xyz;
  r0.xyz = exp2(r0.xyz);
  r0.xyz = min(float3(1,1,1), r0.xyz);
  r0.xyz = r0.xyz + -r1.xyz;
  o0.xyz = cb0[5].xxx * r0.xyz + r1.xyz;
  if(injectedData.gammaSpace != 0.f){
    o0.xyz = renodx::color::srgb::DecodeSafe(o0.xyz);
  }
  if (injectedData.tonemapCheck == 1.f && (injectedData.count2Old == injectedData.count2New)) {
    o0.xyz = applyUserNoTonemap(o0.xyz);
  }
  if (injectedData.countOld == injectedData.countNew) {
    o0.xyz = PostToneMapScale(o0.xyz, injectedData.gammaSpace != 0.f);
  } else if(injectedData.gammaSpace != 0.f){
    o0.xyz = renodx::color::srgb::EncodeSafe(o0.xyz);
  }
  o0.w = 1;
  return;
}