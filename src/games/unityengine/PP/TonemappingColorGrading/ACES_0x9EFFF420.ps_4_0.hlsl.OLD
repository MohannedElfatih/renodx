#include "../common.hlsl"

Texture2D<float4> t2 : register(t2);
Texture2D<float4> t1 : register(t1);
Texture2D<float4> t0 : register(t0);
SamplerState s2_s : register(s2);
SamplerState s1_s : register(s1);
SamplerState s0_s : register(s0);
cbuffer cb0 : register(b0){
  float4 cb0[9];
}

void main(
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = t1.Sample(s2_s, v1.xy).xyzw;
  r0.x = cb0[8].y / r0.x;
  r0.x = min(cb0[8].w, r0.x);
  r0.x = max(cb0[8].z, r0.x);
  r1.xyzw = t0.Sample(s0_s, v1.xy).xyzw;
  r0.yzw = renodx::color::srgb::DecodeSafe(r1.zxy);
  o0.w = r1.w;
  r0.xyz = r0.yzw * r0.xxx;
  r0.xyz = cb0[3].xxx * r0.xyz;
  /*r1.xyz = r0.xyz * float3(2.50999999,2.50999999,2.50999999) + float3(0.0299999993,0.0299999993,0.0299999993);
  r1.xyz = r1.xyz * r0.xyz;
  r2.xyz = r0.xyz * float3(2.43000007,2.43000007,2.43000007) + float3(0.589999974,0.589999974,0.589999974);
  r0.xyz = r0.xyz * r2.xyz + float3(0.140000001,0.140000001,0.140000001);
  r0.xyz = saturate(r1.xyz / r0.xyz);*/
  r0.yzw = cb0[6].zzz * r0.xyz;
  r1.xy = float2(0.5,0.5) * cb0[6].xy;
  r1.yz = r0.zw * cb0[6].xy + r1.xy;
  r0.y = floor(r0.y);
  r1.x = r0.y * cb0[6].y + r1.y;
  r0.x = r0.x * cb0[6].z + -r0.y;
  r2.x = cb0[6].y;
  r2.y = 0;
  r0.yz = r2.xy + r1.xz;
  r1.xyzw = t2.Sample(s1_s, r1.xz).xyzw;
  r2.xyzw = t2.Sample(s1_s, r0.yz).xyzw;
  r0.yzw = r2.xyz + -r1.xyz;
  r0.xyz = r0.xxx * r0.yzw + r1.xyz;
  r0.xyz = handleUserLUT(r0.xyz, t2, s1_s, cb0[6].xyz, 2, true);
  /*r0.xyz = max(float3(0,0,0), r0.xyz);
  r0.xyz = log2(r0.xyz);
  r0.xyz = float3(0.416666657,0.416666657,0.416666657) * r0.xyz;
  r0.xyz = exp2(r0.xyz);
  r0.xyz = r0.xyz * float3(1.05499995,1.05499995,1.05499995) + float3(-0.0549999997,-0.0549999997,-0.0549999997);
  o0.xyz = max(float3(0,0,0), r0.xyz);*/
  if (injectedData.countOld == injectedData.countNew) {
    r0.xyz = PostToneMapScale(r0.xyz, true);
  } else {
    r0.xyz = renodx::color::srgb::EncodeSafe(r0.xyz);
  }
  o0.xyz = r0.xyz;
  return;
}